// Importamos lo necesario para el componente standalone
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-reset-password',
  standalone: true, // Componente independiente sin necesidad de m√≥dulo
  imports: [CommonModule, FormsModule, RouterModule], // M√≥dulos necesarios para ngModel y formularios
  templateUrl: './reset-password.component.html', // Plantilla HTML asociada
})
export class ResetPasswordComponent {
  // Campo para capturar el correo electr√≥nico
  email = '';

  constructor(private http: HttpClient) {}

  // Funci√≥n que se ejecuta al enviar el formulario
  onResetPassword() {
    // Validar que el email no est√© vac√≠o y tenga formato v√°lido
    if (!this.email) {
      alert('‚ö†Ô∏è Debes ingresar un correo electr√≥nico.');
      return;
    }

    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(this.email)) {
      alert('‚ö†Ô∏è El formato del correo electr√≥nico no es v√°lido.');
      return;
    }

    const payload = {
      email: this.email
    };

    // Enviamos la solicitud POST al backend Laravel para iniciar el proceso de recuperaci√≥n
    this.http.post('http://localhost:8000/api/forgot-password', payload).subscribe({
      next: (res: any) => {
        console.log('‚úÖ Correo de recuperaci√≥n enviado:', res);
        alert(res.message || 'üìß Revisa tu correo para continuar.');
        // üßπ Limpiar el formulario
      this.email = '';
      },
      error: (err) => {
        console.error('‚ùå Error al enviar el correo:', err);
        if (err.status === 422) {
          alert('‚ùå El correo ingresado no est√° registrado.');
        } else {
          alert('‚ùå Ocurri√≥ un error al enviar el correo. Int√©ntalo m√°s tarde.');
        }
      }
    });
  }
}
